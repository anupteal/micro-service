resources:
 - name: myAppRepo
   type: GitRepo
   configuration:
     gitProvider: GitHubAcc
     path: anupteal/micro-service
     branches:
        include: javacode	
 # - name: dbp_image
 #   type: Image
 # configuration:
 #    registry: distroless.jfrog.io      # replace with your Artifactory integration
 #    sourceRepository: test1   # required if registry is Artifactory
 #    imageName: distroless.jfrog.io/test1/maven  # replace with your image path and name
 #    imageTag: latest
 #    autoPull: true 

pipelines:
 - name: pipeline_hello_world
   configuration:
      environmentVariables:
         readOnly:
            MY_MESSAGE: "Hello Anup"
   steps:
     - name: Build
       type: Bash
       configuration:
          inputResources:
            - name: myAppRepo
       execution:
         onExecute:
            - echo $MY_MESSAGE
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
            - cd dependencyState/resources/myAppRepo; docker build -t="hello-world-java" . 
     - name: docker_build
       type: DockerBuild
       configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: distroless.jfrog.io/test1/Hello  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: myAppRepo
          integrations:
            - name: myArtifactory    # replace with your artifactory integration
 
     - name: docker_push
       type: DockerPush
       configuration:
          affinityGroup: dbp_group
          targetRepository: test1
          integrations:
            - name: myArtifactory    # replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: myAppRepo
